{
    "name": "postgresql-hacker-helper",
    "displayName": "PostgreSQL Hacker Helper",
    "description": "Extension to assist Postgres hackers - source code developers",
    "version": "0.2.0",
    "engines": {
        "vscode": "^1.0.0"
    },
    "categories": [
        "Debuggers"
    ],
    "icon": "resources/logo.png",
    "activationEvents": [],
    "main": "./out/entrypoint.js",
    "publisher": "ash-blade",
    "repository": {
        "type": "git",
        "url": "https://github.com/ashenBlade/postgres-dev-helper.git"
    },
    "keywords": [
        "PostgreSQL",
        "postgresql",
        "postgres",
        "pgsql"
    ],
    "contributes": {
        "commands": [
            {
                "command": "postgresql-hacker-helper.dumpNodeToLog",
                "title": "Dump Node to stdout",
                "shortTitle": "Dump Node to stdout",
                "category": "PgSQL"
            },
            {
                "command": "postgresql-hacker-helper.openConfigurationFile",
                "title": "Open or create configuration file (JSON)",
                "shortTitle": "Open configuration file",
                "category": "PgSQL"
            },
            {
                "command": "postgresql-hacker-helper.refreshPostgresVariablesView",
                "title": "Refresh Postgres variables view",
                "shortTitle": "Refresh variables view",
                "category": "PgSQL",
                "icon": "$(refresh)"
            },
            {
                "command": "postgresql-hacker-helper.refreshConfigFile",
                "title": "Refresh configuration file",
                "shortTitle": "Refresh config file",
                "category": "PgSQL"
            }
        ],
        "menus": {
            "debug/variables/context": [
                {
                    "command": "postgresql-hacker-helper.dumpNodeToLog",
                    "when": "inDebugMode && debugState == stopped"
                }
            ],
            "view/title": [
                {
                    "command": "postgresql-hacker-helper.refreshPostgresVariablesView",
                    "group": "navigation",
                    "when": "inDebugMode && debugState == stopped"
                }
            ],
            "commandPalette": [
                {
                    "command": "postgresql-hacker-helper.dumpNodeToLog",
                    "when": "false"
                },
                {
                    "command": "postgresql-hacker-helper.refreshPostgresVariablesView",
                    "group": "navigation",
                    "when": "inDebugMode && debugState == stopped"
                }
            ]
        },
        "views": {
            "debug": [
                {
                    "id": "postgresql-hacker-helper.node-tree-view",
                    "name": "pg variables",
                    "type": "tree",
                    "visibility": "visible"
                }
            ]
        },
        "configuration": {
            "title": "PostgreSQL Hacker Helper",
            "properties": {
                "postgresql-hacker-helper.nodeTagFiles": {
                    "title": "Files with NodeTags",
                    "type": "array",
                    "default": [
                        "src/include/nodes/nodes.h",
                        "src/include/nodes/nodetags.h"
                    ],
                    "description": "Files, where NodeTag values defined. It will be used to check if variable can have NodeTag. Can be either relative or absolute path. Relative paths used within current workspace"
                },
                "postgresql-hacker-helper.logLevel": {
                    "title": "Log level",
                    "type": "string",
                    "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "DISABLE"
                    ],
                    "default": "INFO",
                    "description": "Minimum level of log messages to display in Output view"
                }
            }
        },
        "jsonValidation": [
            {
                "fileMatch": "pgsql_hacker_helper_properties.json",
                "url": "./properties.schema.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "vscode-test"
    },
    "devDependencies": {
        "@types/vscode": "^1.0.0",
        "@types/mocha": "^10.0.7",
        "@types/node": "20.x",
        "@typescript-eslint/eslint-plugin": "^7.14.1",
        "@typescript-eslint/parser": "^7.11.0",
        "eslint": "^8.57.0",
        "typescript": "^5.4.5",
        "@vscode/test-cli": "^0.0.9",
        "@vscode/test-electron": "^2.4.0"
    }
}
